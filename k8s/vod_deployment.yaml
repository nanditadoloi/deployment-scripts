apiVersion: apps/v1
kind: Deployment
metadata:
  name: vod-app-deployment  # Name of the deployment
  labels:
    app: vod-app  # Deployment label (optional but useful)
spec:
  replicas: 4  # Number of pod replicas to run
  selector:
    matchLabels:
      app: vod-app  # Must match the pod template labels
  template:
    metadata:
      labels:
        app: vod-app  # Pod label (for selection by service)
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/region
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: vod-app
      containers:
      - name: vod-app-container
        image: nanditad48/vod:latest  # Replace with your actual image
        ports:
        - containerPort: 5000  # Flask app port
        env:
          - name: FLASK_ENV
            value: "production"
        resources:
          requests:
            cpu: "150m"
          limits:
            cpu: "200m"
        imagePullPolicy: Always  # This ensures Kubernetes always pulls the image
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
      restartPolicy: Always
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: vod-app-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: vod-app-deployment
  minReplicas: 4
  maxReplicas: 10  # Scale up to 10 replicas
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
---
apiVersion: v1
kind: Service
metadata:
  name: vod-np-service
  annotations:
    service.kubernetes.io/topology-mode: "Auto"  # Updated to use the correct annotation
spec:
  type: NodePort
  selector:
    app: vod-app
  ports:
    - port: 5000
      targetPort: 5000
      nodePort: 30001
---